[project]
name = "doceteria-backend"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "fastapi>=0.119.1",
    "pandas>=2.3.3",
    "pytest>=8.4.2",
    "sqlalchemy>=2.0.44",
    "taskipy>=1.14.1",
    "uvicorn>=0.38.0",
    "httpx>=0.27.0",
    "isort>=7.0.0",
    "alembic>=1.17.0",
    "flake8>=7.3.0",
    "black>=25.9.0",
    "ruff>=0.14.1",
    "gunicorn>=23.0.0",
]

[tool.black]
line-length = 88
target-version = ["py311"]
exclude = '''
/(
    .venv
  | migrations
  | docs
)/'''

[tool.isort]
profile = "black"
line_length = 88
skip = [".venv", "docs", "migrations"]

[tool.ruff]
line-length = 88
target-version = "py311"
fix = true
exclude = [".venv", "migrations", "docs"]

[tool.ruff.lint]
select = ["E", "F", "W", "I", "B", "C4", "N", "UP"]
ignore = []

[tool.flake8]
exclude = [".venv","__pycache__","migrations", "docs"]
max-line-length = 88
max-complexity = 10
ignore = ["E203", "W503"]  # conflito com Black

[tool.taskipy.tasks]
# Lint completo: Ruff, Flake8, Black, isort
lint = "uv run ruff check . && uv run flake8 src tests config --statistics --count --max-complexity=10 --verbose --max-line-length=88"
fix = "uv run ruff check . --fix && uv run black . && uv run isort ."

# Test
test = "uv run pytest"

# Server
server = "uv run uvicorn src.main:app --reload"
